name: Veracode Static Analysis Scan

on:
  #push:
  #  branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '0 3 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-pipeline-scan:
    # The type of runner that the job will run on
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and copies all sources into ZIP file for submitting for analysis. Replace this section with your applications build steps
    - uses: actions/checkout@v3
      with:
        repository: ''
    - run: npm run dev-install
      env:
        GITHUB_ORGANIZATION: ${{ github.event.repository.owner.login }}
    - run: cd .github && ./generateZipArchivesForStaticAnalysis.sh skipDateIdentifier

    - name: Backend Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/Backend.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'Backend'

    - name: CommonBrowserLibs Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/CommonBrowserLibs.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'common-browser-libs'
        
    - name: Demiurge Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/Demiurge.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'Demiurge'
        
    - name: Enterprise Wallet Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/EnterpriseWallet.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'EnterpriseWallet'
        
    - name: GtinResolver Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/GtinResolver.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'GTIN Resolver'
    
    - name: LPWA Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/LPWA.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'LPWA'
        
    - name: Octopus Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/Octopus.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'octopus'
        
    - name: Trust Loader Scan
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        appname: 'EPI'
        createprofile: false
        filepath: '.github/generated/TrustLoader.zip'
        vid: '${{secrets.VERACODE_API_ID}}'
        vkey: '${{secrets.VERACODE_API_KEY}}'
        sandboxname: 'trust-loader'
