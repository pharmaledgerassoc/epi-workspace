<root>
  <p page="0" left="0.30165" top="0.06790" width="0.39671" height="0.01807" class="Type">
    <b>Notice: Information du patient</b>
  </p>
  <p page="0" left="0.34192" top="0.09794" width="0.31616" height="0.04811" class="Product_Name">
    <b>Product A® 24 mg/26 mg comprimés pelliculés Product A® 49 mg/51 mg comprimés pelliculés Product A® 97 mg/103 mg comprimés pelliculés</b>
  </p>
  <p page="0" left="0.46049" top="0.14301" width="0.07902" height="0.01758" class="Ingredient Substance">YYY/ZZZ</p>
  <p page="0" left="0.11909" top="0.17305" width="0.72005" height="0.03309" class="Read Instructions">
    <b>Veuillez lire attentivement cette notice avant de prendre ce médicament car elle contient des informations importantes pour vous.</b>
  </p>
  <p page="0" left="0.11909" top="0.20310" width="0.70076" height="0.01758" class="Read Instructions">- Gardez cette notice. Vous pourriez avoir besoin de la relire.</p>
  <p page="0" left="0.11909" top="0.21812" width="0.66994" height="0.03261" class="Read Instructions">- Si vous avez d’autres questions, interrogez votre médecin, votre pharmacien ou votre infirmier/ère.</p>
  <p page="0" left="0.11909" top="0.24817" width="0.75715" height="0.03261" class="Read Instructions">- Ce médicament vous a été personnellement prescrit. Ne le donnez pas à d’autres personnes. Il pourrait leur être nocif, même si les signes de leur maladie sont identiques aux vôtres.</p>
  <p page="0" left="0.11909" top="0.27821" width="0.75412" height="0.04763" class="Read Instructions">- Si vous ressentez un quelconque effet indésirable, parlez-en à votre médecin, ou votre pharmacien. Ceci s’applique aussi à tout effet indésirable qui ne serait pas mentionné dans cette notice. Voir rubrique 4.</p>
  <p page="0" left="0.11909" top="0.33830" width="0.28537" height="0.01807" class="Table of Content">
    <b>Que contient cette notice?</b>
  </p>
  <p page="0" left="0.11909" top="0.36835" width="0.42320" height="0.01758" class="Table of Content">1. Qu’est-ce qu’Product A et dans quels cas est-il utilisé?</p>
  <p page="0" left="0.11909" top="0.38337" width="0.49042" height="0.01758" class="Table of Content">2. Quelles sont les informations à connaître avant de prendre Product A?</p>
  <p page="0" left="0.11909" top="0.39839" width="0.29186" height="0.01758" class="Table of Content">3. Comment prendre Product A?</p>
  <p page="0" left="0.11909" top="0.41342" width="0.34470" height="0.01758" class="Table of Content">4. Quels sont les effets indésirables éventuels ?</p>
  <p page="0" left="0.11909" top="0.42844" width="0.30619" height="0.01758" class="Table of Content">5. Comment conserver Product A?</p>
  <p page="0" left="0.11909" top="0.44346" width="0.38880" height="0.01758" class="Table of Content">6. Contenu de l’emballage et autres informations</p>
  <section level="1" page="0" left="0.11909" top="0.48853" width="0.44794" height="0.01807">
    <header>
      <b>1. Qu’est-ce qu’Product A et dans quels cas est-il utilisé?</b>
    </header>
    <p page="0" left="0.11909" top="0.51857" width="0.68036" height="0.03261">Product A est un médicament contenant un inhibiteur du récepteur de l’angiotensine et de la néprilysine. Il contient deux substances actives, le YYY et le ZZZ.</p>
    <p page="0" left="0.11909" top="0.56364" width="0.66235" height="0.03261">Product A est utilisé pour traiter un type d’insuffisance cardiaque chronique chez les adultes.</p>
    <p page="0" left="0.11909" top="0.60871" width="0.74296" height="0.04763">Ce type d’insuffisance cardiaque survient lorsque le cœur est faible et ne peut plus pomper suffisamment de sang vers les poumons et le reste du corps. Les symptômes les plus fréquents de l’insuffisance cardiaque sont l’essoufflement, la fatigue, la sensation d’épuisement et les œdèmes des chevilles.</p>
  </section>
  <section level="1" page="0" left="0.11909" top="0.68382" width="0.51928" height="0.01807">
    <header>
      <b>2. Quelles sont les informations à connaître avant de prendre Product A?</b>
    </header>
    <p page="0" left="0.11909" top="0.71387" width="0.34692" height="0.01807">
      <b>Ne prenez jamais Product A,</b>
    </p>
    <ul page="0" data-type="•" left="0.16670" top="0.72983" width="0.71112" height="0.16968">
      <li data-enum="•">
        <p page="0" left="0.16670" top="0.72983" width="0.66037" height="0.03261">si vous êtes allergique au YYY, au ZZZ ou à l’un des autres composants contenus dans ce médicament mentionnés dans la rubrique 6.</p>
      </li>
      <li data-enum="•">
        <p page="0" left="0.16670" top="0.76081" width="0.71112" height="0.07767">si vous prenez un autre type de médicament appelé inhibiteur de l’enzyme de conversion (IEC), (par exemple l’énalapril, le lisinopril ou le ramipril). Les IEC sont utilisés pour traiter l’hypertension et l’insuffisance cardiaque. Si vous êtes actuellement traité par un IEC, attendez 36 heures après la dernière prise avant de commencer le traitement avec Product A (voir «Autres médicaments et Product A»).</p>
      </li>
      <li data-enum="•">
        <p page="0" left="0.16670" top="0.83686" width="0.69171" height="0.06265">si vous ou quelqu’un de votre famille a déjà eu une réaction appelée angiœdème (gonflement du visage, des lèvres, de la langue et/ou de la gorge, difficultés à respirer) lors de la prise d’un IEC ou d’un antagoniste du récepteur de l’angiotensine (ARA) (par exemple le ZZZ, le telmisartan ou l’irbésartan).</p>
      </li>
    </ul>
    <ul page="1" data-type="•" left="0.11909" top="0.06883" width="0.76062" height="0.12510">
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.06883" width="0.68547" height="0.04763">si vous avez du diabète ou une fonction rénale diminuée et que vous prenez également un médicament pour diminuer votre pression artérielle contenant de l’aliskiren (voir «Autres médicaments et Product A»).</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.11335" width="0.40569" height="0.01907">si vous avez une maladie sévère du foie.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.13080" width="0.76062" height="0.06314">si vous êtes enceinte de plus de 3 mois (il est aussi préférable d’éviter ce médicament au début de la grossesse, voir «Grossesse et allaitement»). <b>Si l’un des points précédents s’applique à vous, ne prenez pas Product A et parlez-en à votre médecin.</b></p>
      </li>
    </ul>
    <p page="1" left="0.11909" top="0.20591" width="0.71419" height="0.04763">
      <b>Avertissements et précautions</b> Adressez-vous à votre médecin, pharmacien ou infirmier/ère avant ou pendant la prise d’Product A :</p>
    <ul page="1" data-type="•" left="0.11909" top="0.25192" width="0.73666" height="0.18939">
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.25192" width="0.68088" height="0.03261">si vous êtes actuellement traité par un antagoniste du récepteur de l’angiotensine (ARA) ou par l’aliskiren (voir «Ne prenez jamais Product A»).</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.28290" width="0.63315" height="0.03261">si vous avez déjà eu un angiœdème (voir «Ne prenez jamais Product A» et la rubrique 4 «Quels sont les effets indésirables éventuels»).</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.31388" width="0.68905" height="0.04763">si vous avez une pression artérielle basse ou que vous prenez d’autres médicaments qui diminuent la pression artérielle (par exemple un diurétique) ou que vous souffrez de vomissements ou de diarrhées, en particulier si vous êtes âgé de 65 ans ou plus, ou si vous avez une maladie des reins ou une pression artérielle basse.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.35840" width="0.40879" height="0.01907">si vous avez une maladie sévère des reins.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.37436" width="0.34110" height="0.01907">si vous souffrez de déshydratation.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.39031" width="0.35028" height="0.01907">si vous avez un rétrécissement de votre artère rénale.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.40627" width="0.33646" height="0.01907">si vous avez une maladie du foie.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.42223" width="0.72997" height="0.01907">si vous présentez des hallucinations, de la paranoïa ou des changements dans votre rythme de sommeil.</p>
      </li>
    </ul>
    <p page="1" left="0.11909" top="0.45377" width="0.74507" height="0.03261">Votre médecin pourra contrôler le taux de potassium dans votre sang à intervalles réguliers pendant votre traitement par Product A.</p>
    <p page="1" left="0.11909" top="0.49884" width="0.70412" height="0.03309">
      <b>Si l’une des situations précédentes s’applique à vous, parlez-en à votre médecin, pharmacien ou infirmier/ère avant de prendre Product A.</b>
    </p>
    <p page="1" left="0.11909" top="0.54390" width="0.73627" height="0.04763">
      <b>Enfants et adolescents</b> Ne pas administrer chez les enfants (âgés de moins de 18 ans), en l’absence d’études dans ces populations.</p>
    <p page="1" left="0.11909" top="0.60399" width="0.76083" height="0.09270">
      <b>Autres médicaments et Product A</b> Informez votre médecin, pharmacien ou infirmier/ère si vous prenez, avez récemment pris ou pourriez prendre tout autre médicament. Il peut être nécessaire de modifier la dose, de prendre des précautions particulières ou même d’arrêter de prendre l’un de ces médicaments. Ceci est particulièrement important pour les médicaments suivants :</p>
    <ul page="1" data-type="•" left="0.11909" top="0.69507" width="0.74847" height="0.23259">
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.69507" width="0.68700" height="0.07767">les IEC. Ne prenez pas Product A avec un IEC. Si vous avez pris un IEC, attendez 36 heures après avoir pris la dernière dose d’IEC avant de commencer le traitement par Product A (voir «Ne prenez jamais Product A»). Si vous arrêtez de prendre Product A, attendez 36 heures après avoir pris la dernière dose d’Product A avant de commencer le traitement par un IEC.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.77112" width="0.67879" height="0.04763">d’autres médicaments qui sont utilisés pour traiter l’insuffisance cardiaque ou diminuer la pression sanguine, tels que des antagonistes du récepteur de l’angiotensine ou l’aliskiren (voir «Ne prenez jamais Product A»).</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.81712" width="0.62286" height="0.03261">certains médicaments appelés statines qui sont utilisés pour diminuer un taux élevé de cholestérol (par exemple l’atorvastatine).</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.11909" top="0.84661" width="0.73313" height="0.01907">le sildénafil, un médicament utilisé pour traiter les problèmes d’érection ou l’hypertension pulmonaire.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.86406" width="0.67933" height="0.03261">les médicaments qui augmentent le taux de potassium dans le sang, notamment les suppléments en potassium, les substituts du sel contenant du potassium, les médicaments épargneurs de potassium et l’héparine.</p>
      </li>
      <li data-enum="•">
        <p page="1" left="0.16670" top="0.89505" width="0.70086" height="0.03261">des antidouleurs du type anti-inflammatoires non stéroïdiens (AINS) et inhibiteurs sélectifs de la cyclo-oxygénase de type 2 (inhibiteurs de la Cox-2). Si vous prenez un de ces médicaments, votre </p>
      </li>
    </ul>
    <p page="2" left="0.16671" top="0.06790" width="0.65983" height="0.03261">médecin pourra contrôler votre fonction rénale au début ou lors de l’ajustement de votre traitement (voir «Avertissements et précautions»).</p>
    <ul page="2" data-type="•" left="0.11909" top="0.09739" width="0.74956" height="0.15851">
      <li data-enum="•">
        <p page="2" left="0.11909" top="0.09739" width="0.66384" height="0.01907">le lithium, un médicament utilisé pour traiter certains types de maladies psychiatriques.</p>
      </li>
      <li data-enum="•">
        <p page="2" left="0.16670" top="0.11484" width="0.68084" height="0.03261">le furosémide, un médicament appartenant à la classe des diurétiques qui est utilisé pour augmenter le volume d’urine que vous produisez.</p>
      </li>
      <li data-enum="•">
        <p page="2" left="0.11909" top="0.14433" width="0.55816" height="0.01907">la nitroglycérine, un médicament utilisé pour traiter l’angine de poitrine.</p>
      </li>
      <li data-enum="•">
        <p page="2" left="0.16670" top="0.16178" width="0.70195" height="0.04763">certains types d’antibiotiques (du groupe de la rifampicine), la ciclosporine (utilisée en prévention des rejets de greffes) ou des antiviraux comme le ritonavir (utilisé pour traiter le SIDA).</p>
      </li>
      <li data-enum="•">
        <p page="2" left="0.11909" top="0.20779" width="0.70412" height="0.04811">la metformine, un médicament utilisé pour traiter le diabète. <b>Si l’une des situations précédentes s’applique à vous, ne prenez pas Product A et parlez-en à votre médecin ou pharmacien.</b></p>
      </li>
    </ul>
    <p page="2" left="0.11909" top="0.26788" width="0.23404" height="0.01807">
      <b>Grossesse et allaitement</b>
    </p>
    <p page="2" left="0.11909" top="0.29792" width="0.73731" height="0.07767">Grossesse Vous devez informer votre médecin si vous pensez que vous êtes (ou pourriez devenir) enceinte. Votre médecin vous conseillera normalement d’arrêter ce médicament avant que vous ne soyez enceinte ou dès que vous savez que vous êtes enceinte, et vous conseillera de prendre un autre médicament au lieu d’Product A.</p>
    <p page="2" left="0.11909" top="0.38806" width="0.75935" height="0.04763">Ce médicament n’est pas recommandé au début de la grossesse et ne doit pas être pris après le 3ème mois de grossesse car il peut nuire gravement à votre bébé s’il est utilisé après le 3ème mois de grossesse.</p>
    <p page="2" left="0.11909" top="0.44815" width="0.73272" height="0.04763">Allaitement Product A n’est pas recommandé chez les femmes qui allaitent. Prévenez votre médecin si vous allaitez ou si vous envisagez d’allaiter.</p>
    <p page="2" left="0.11909" top="0.50824" width="0.76094" height="0.09270">
      <b>Conduite de véhicules et utilisation de machines</b> Avant de conduire un véhicule, d’utiliser des outils ou des machines ou d’avoir des activités qui nécessitent de la concentration, assurez-vous de savoir comment Product A agit sur vous. Si vous avez des vertiges ou si vous vous sentez très fatigué en prenant ce médicament, ne conduisez pas de voiture ou de vélo, n’utilisez pas de machines ni d’outils.</p>
  </section>
  <section level="1" page="2" left="0.11909" top="0.62842" width="0.30730" height="0.01807">
    <header>
      <b>3. Comment prendre Product A?</b>
    </header>
    <p page="2" left="0.11909" top="0.65846" width="0.73060" height="0.03261">Veillez à toujours prendre ce médicament en suivant exactement les indications de votre médecin ou pharmacien. Vérifiez auprès de votre médecin ou pharmacien en cas de doute.</p>
    <p page="2" left="0.11909" top="0.70353" width="0.75366" height="0.06265">La dose initiale habituelle est de 24 mg/26 mg ou 49 mg/51 mg deux fois par jour (un comprimé le matin et un comprimé le soir). Votre médecin décidera de la dose exacte en fonction de vos traitements antérieurs. Votre médecin ajustera la dose en fonction de votre réponse au traitement, jusqu’à la dose qui sera optimale pour vous.</p>
    <p page="2" left="0.11909" top="0.77864" width="0.69520" height="0.03261">La dose recommandée est de 97 mg/103 mg deux fois par jour (1 comprimé le matin et 1 comprimé le soir).</p>
    <p page="2" left="0.11909" top="0.82371" width="0.75369" height="0.07767">Les patients prenant Product A peuvent avoir une pression artérielle basse (sensations vertigineuses, étourdissements), un taux élevé de potassium dans le sang (qui serait détecté lorsque votre médecin vous demandera de faire un test sanguin) ou une altération de la fonction rénale. Si cela se produit, votre médecin pourra diminuer la dose des autres médicaments que vous prenez, diminuer de façon temporaire votre dose d’Product A ou arrêter complètement le traitement par Product A.</p>
    <p page="3" left="0.11909" top="0.06790" width="0.76197" height="0.03261">Avalez le comprimé avec un verre d’eau. Vous pouvez prendre Product A pendant ou en dehors des repas. Il n’est pas recommandé de couper ou d’écraser les comprimés.</p>
    <p page="3" left="0.11909" top="0.11296" width="0.75988" height="0.07767">
      <b>Si vous avez pris plus d’Product A que vous n’auriez dû</b> Si vous avez pris accidentellement trop de comprimés d’Product A ou si une autre personne a pris vos comprimés, consultez votre médecin immédiatement. Si vous avez des vertiges importants et/ou vous évanouissez prévenez votre médecin aussi rapidement que possible et allongez-vous.</p>
    <p page="3" left="0.11909" top="0.20310" width="0.73731" height="0.07767">
      <b>Si vous oubliez de prendre Product A</b> Il est recommandé de prendre votre médicament toujours au même moment de la journée. Si vous avez oublié de prendre une dose, prenez la dose suivante à l’heure habituelle. Ne prenez pas de dose double pour compenser le comprimé que vous avez oublié de prendre.</p>
    <p page="3" left="0.11909" top="0.29324" width="0.75419" height="0.06265">
      <b>Si vous arrêtez de prendre Product A</b> L’arrêt du traitement par Product A peut aggraver votre maladie. Vous ne devez pas interrompre votre traitement sauf avis de votre médecin.</p>
    <p page="3" left="0.11909" top="0.36835" width="0.73110" height="0.03261">Si vous avez d’autres questions sur l’utilisation de ce médicament, demandez plus d’informations à votre médecin ou à votre pharmacien.</p>
  </section>
  <section level="1" page="3" left="0.11909" top="0.42844" width="0.36020" height="0.01807">
    <header>
      <b>4. Quels sont les effets indésirables éventuels ?</b>
    </header>
    <p page="3" left="0.11909" top="0.45848" width="0.75519" height="0.03261">Comme tous les médicaments, ce médicament peut provoquer des effets indésirables, mais ils ne surviennent pas systématiquement chez tout le monde.</p>
    <p page="3" left="0.11909" top="0.50355" width="0.36698" height="0.01807">
      <b>Certains effets indésirables peuvent être graves.</b>
    </p>
    <ul page="3" data-type="•" left="0.16670" top="0.51951" width="0.70034" height="0.07767">
      <li data-enum="•">
        <p page="3" left="0.16670" top="0.51951" width="0.70034" height="0.07767">Arrêtez de prendre Product A et allez chez le médecin immédiatement si vous remarquez un gonflement du visage, des lèvres, de la langue et/ou de la gorge, qui peuvent entraîner des difficultés à respirer ou à avaler. Cela peut être les signes d’un angiœdème (un effet indésirable peu fréquent qui peut affecter jusqu’à 1 patient sur 100).</p>
      </li>
    </ul>
    <p page="3" left="0.11909" top="0.60965" width="0.72081" height="0.04763">
      <b>Autres effets indésirables possibles</b> Si vous ressentez l’un des effets indésirables listés ci-dessous, parlez-en à votre médecin ou à votre pharmacien.</p>
    <p page="3" left="0.11909" top="0.66974" width="0.45000" height="0.01807">
      <b>Très fréquents </b> (peuvent affecter plus de 1 patient sur 10)</p>
    <ul page="3" data-type="•" left="0.11909" top="0.68421" width="0.54637" height="0.05099">
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.68421" width="0.45707" height="0.01907">baisse de la pression artérielle (sensation de vertige, étourdissements)</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.70017" width="0.54637" height="0.01907">taux élevé de potassium dans le sang (suite à un test sanguin)</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.71613" width="0.44680" height="0.01907">atteinte de la fonction rénale (insuffisance rénale).</p>
      </li>
    </ul>
    <p page="3" left="0.11909" top="0.74766" width="0.39303" height="0.01807">
      <b>Fréquents</b> (peuvent affecter jusqu’à 1 patient sur 10)</p>
    <ul page="3" data-type="•" left="0.11909" top="0.76213" width="0.61713" height="0.16271">
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.76213" width="0.09996" height="0.01907">toux</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.77809" width="0.17283" height="0.01907">sensations vertigineuses</p>
      </li>
      <li data-enum="•">
           <p page="3" left="0.11909" top="0.79405" width="0.11842" height="0.01907">diarrhées</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.81001" width="0.61713" height="0.01907">taux faible de globules rouges dans le sang (suite à un test sanguin)</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.82597" width="0.12461" height="0.01907">sensation de fatigue</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.84193" width="0.44416" height="0.01907">insuffisance rénale (aiguë) (maladie sévère des reins)</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.85789" width="0.57098" height="0.01907">taux faible de potassium dans le sang (suite à un test sanguin)</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.87385" width="0.16459" height="0.01907">maux de tête</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.88981" width="0.12459" height="0.01907">évanouissement</p>
      </li>
      <li data-enum="•">
        <p page="3" left="0.11909" top="0.90577" width="0.12252" height="0.01907">faiblesse</p>
      </li>
    </ul>
    <ul page="4" data-type="•" left="0.11909" top="0.06734" width="0.70797" height="0.09793">
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.06734" width="0.11125" height="0.01907">sensation de mal au cœur (nausée)</p>
      </li>
      <li data-enum="•">
        <p page="4" left="0.16670" top="0.08479" width="0.66035" height="0.03261">diminution de la pression artérielle (sensations vertigineuses, étourdissements) en passant de la position assise ou couchée à la position debout</p>
      </li>
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.11429" width="0.33032" height="0.01907">gastrite (douleur à l’estomac, nausée)</p>
      </li>
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.13025" width="0.15947" height="0.01907">sensation de tournis</p>
      </li>
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.14621" width="0.53606" height="0.01907">taux faible de sucre dans le sang (suite à un test sanguin).</p>
      </li>
    </ul>
    <p page="4" left="0.11909" top="0.17774" width="0.44637" height="0.01807">
      <b>Peu fréquents</b> (peuvent affecter jusqu’à 1 patient sur 100)</p>
    <ul page="4" data-type="•" left="0.11909" top="0.19221" width="0.53970" height="0.03503">
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.19221" width="0.40833" height="0.01907">réaction allergique avec éruption cutanée et démangeaisons</p>
      </li>
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.20817" width="0.53970" height="0.01907">sensations vertigineuses en passant de la position assise à debout (et vice-versa).
</p>
      </li>
    </ul>
    <p page="4" left="0.11909" top="0.23970" width="0.40996" height="0.01807">
      <b>Rares </b> (peuvent affecter jusqu’à 1 patient sur 1000)</p>
    <ul page="4" data-type="•" left="0.11909" top="0.25417" width="0.28321" height="0.03503">
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.25417" width="0.16520" height="0.01907">hallucinations</p>
      </li>
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.27013" width="0.28321" height="0.01907">modification du rythme de sommeil</p>
      </li>
    </ul>
    <p page="4" left="0.11909" top="0.30167" width="0.45768" height="0.01807">
      <b>Très rares </b> (peuvent affecter jusqu’à 1 patient sur 10000)</p>
    <ul page="4" data-type="•" left="0.11909" top="0.31614" width="0.11184" height="0.01907">
      <li data-enum="•">
        <p page="4" left="0.11909" top="0.31614" width="0.11184" height="0.01907">paranoïa</p>
      </li>
    </ul>
    <p page="4" left="0.11909" top="0.34959" width="0.75951" height="0.09270">
      <b>Déclaration des effets secondaires</b> Si vous ressentez un quelconque effet indésirable, parlez-en à votre médecin, votre pharmacien ou votre infirmier/ère. Ceci s’applique aussi à tout effet indésirable qui ne serait pas mentionné dans cette notice. Vous pouvez également déclarer les effets indésirables directement (voir informations ci-dessous). En signalant les effets indésirables, vous contribuez à fournir davantage d’informations sur la sécurité du médicament.</p>
    <table page="4" left="0.11909" top="0.45420" width="0.80471" height="0.15991">
      <tr page="4" left="0.11909" top="0.45420" width="0.80471" height="0.15991">
        <td>
          <p page="4" left="0.12858" top="0.45550" width="0.05850" height="0.01473">
            <b>Belgique</b>
          </p>
        </td>
        <td>
          <p page="4" left="0.53053" top="0.45550" width="0.09342" height="0.01473">
            <b>Luxembourg</b>
          </p>
        </td>
      </tr>
      <tr page="4" left="0.11909" top="0.45479" width="0.80471" height="0.15931">
        <td>
          <p page="4" left="0.12858" top="0.47153" width="0.32477" height="0.12566">Agence fédérale des médicaments et des produits de santé Division Vigilance  Avenue Galilée 5/03 1210 BRUSSEL  Site internet: www.notifieruneffetindesirable.be e-mail: adr@afmps.be</p>
        </td>
        <td>
          <p page="4" left="0.53053" top="0.47153" width="0.36375" height="0.12566">Centre Régional de Pharmacovigilance de Nancy Bâtiment de Biologie Moléculaire et de Biopathologie (BBB) CHRU de Nancy – Hôpitaux de Brabois Rue du Morvan 54 511 VANDOEUVRE LES NANCY CEDEX  Tél  : (+33) 3 83 65 60 85 / 87 e-mail : crpv@chru-nancy.fr ou Direction de la Santé Division de la Pharmacie et des Médicaments  20, rue de Bitbourg L-1273 Luxembourg-Hamm Tél. : (+352) 2478 5592 e-mail :  pharmacovigilance@ms.etat.lu</p>
        </td>
      </tr>
    </table>
  </section>
  <section level="1" page="4" left="0.11909" top="0.64097" width="0.32474" height="0.01807">
    <header>
      <b>5. Comment conserver Product A</b>
    </header>
    <p page="4" left="0.11909" top="0.67102" width="0.74449" height="0.16781">Tenir ce médicament hors de la vue et de la portée des enfants. N’utilisez pas ce médicament après la date de péremption indiquée sur l’emballage et la plaquette après EXP. La date de péremption fait référence au dernier jour de ce mois. Ce médicament ne nécessite pas de précautions particulières de conservation concernant la température. A conserver dans l’emballage extérieur d’origine, à l’abri de l’humidité. N’utilisez pas ce médicament si vous remarquez que la boîte est détériorée ou présente des signes d’ouverture. Ne jetez aucun médicament au tout-à-l’égout ou avec les ordures ménagères. Demandez à votre pharmacien d’éliminer les médicaments que vous n’utilisez plus. Ces mesures contribueront à protéger l’environnement.
</p>
  </section>
  <section level="1" page="5" left="0.11909" top="0.06790" width="0.41766" height="0.01807">
    <header>
      <b>6. Contenu de l’emballage et autres informations</b>
    </header>
    <p page="5" left="0.11909" top="0.09794" width="0.18116" height="0.01807">
      <b>Ce que contient Product A </b>
    </p>
    <ul page="5" data-type="•" left="0.11909" top="0.11241" width="0.74823" height="0.23220">
      <li data-enum="•">
        <p page="5" left="0.11909" top="0.11241" width="0.31959" height="0.01907">Les substances actives sont le YYY et le ZZZ.</p>
        <ul page="5" data-type="o" left="0.21432" top="0.12892" width="0.63273" height="0.09270">
          <li data-enum="o">
            <p page="5" left="0.21432" top="0.12892" width="0.61425" height="0.03261">Chaque comprimé pelliculé de 24 mg/26 mg contient 24,3 mg de YYY et 25,7 mg de ZZZ (sous forme de complexe sodique YYY ZZZ).</p>
          </li>
          <li data-enum="o">
            <p page="5" left="0.21432" top="0.15897" width="0.61425" height="0.03261">Chaque comprimé pelliculé de 49 mg/51 mg contient 48,6 mg de YYY et 51,4 mg de ZZZ (sous forme de complexe sodique YYY ZZZ).</p>
          </li>
          <li data-enum="o">
            <p page="5" left="0.21432" top="0.18901" width="0.63273" height="0.03261">Chaque comprimé pelliculé de 97 mg/103 mg contient 97,2 mg de YYY et 102,8 mg de ZZZ (sous forme de complexe sodique YYY ZZZ).</p>
          </li>
        </ul>
      </li>
      <li data-enum="•">
        <p page="5" left="0.16670" top="0.22000" width="0.62757" height="0.04763">Les autres composants du noyau du comprimé sont la cellulose microcristalline, l’hydroxypropylcellulose faiblement substituée, la crospovidone, le stéarate de magnésium, le talc et la silice colloïdale anhydre.</p>
      </li>
      <li data-enum="•">
        <p page="5" left="0.16670" top="0.26600" width="0.68447" height="0.04763">Le pelliculage des comprimés de 24 mg/26 mg et de 97 mg/103 mg contient de l’hypromellose, du dioxyde de titane (E171), du Macrogol (4 000), du talc, de l’oxyde de fer rouge (E172) et de l’oxyde de fer noir (E172).</p>
      </li>
      <li data-enum="•">
        <p page="5" left="0.16670" top="0.31201" width="0.70062" height="0.03261">Le pelliculage du comprimé de 49 mg/51 mg contient de l’hypromellose, du dioxyde de titane (E171), du Macrogol (4 000), du talc, de l’oxyde de fer rouge (E172) et de l’oxyde de fer jaune (E172).</p>
      </li>
    </ul>
    <p page="5" left="0.11909" top="0.35707" width="0.75429" height="0.10772">
      <b>Comment se présente Product A et contenu de l’emballage extérieur</b>Les comprimés pelliculés d’Product A 24 mg/26 mg sont violet blanc, ovales, portant l’inscription « NVR » gravée sur une face et « LZ » sur l’autre face. Dimensions approximatives du comprimé de 13,1 mm x 5,2 mm. Les comprimés pelliculés d’Product A 49 mg/51 mg sont jaune pâle, ovales, portant l’inscription « NVR » gravée sur une face et « L1 » sur l’autre face. Dimensions approximatives du comprimé de 13,1 mm x 5,2 mm. Les comprimés pelliculés d’Product A 97 mg/103 mg sont rose clair, ovales, portant l’inscription « NVR » gravée sur une face et « L11 » sur l’autre face. Dimensions approximatives du comprimé de 15,1 mm x 6,0 mm.
</p>
    <p page="5" left="0.11909" top="0.47725" width="0.75427" height="0.06265">Les comprimés sont présentés en boîtes contenant 14, 20, 28, 56, 168 ou 196 comprimés et en conditionnement multiple comprenant 7 boîtes, chacune contenant 28 comprimés. Les comprimés de 49 mg/51 mg et 97 mg/103 mg, sont aussi disponibles en conditionnement multiple comprenant 3 boîtes, chacune contenant 56 comprimés.</p>
    <p page="5" left="0.11909" top="0.55237" width="0.58694" height="0.01758">Toutes les présentations peuvent ne pas être commercialisées.</p>
    <p page="5" left="0.11909" top="0.58241" width="0.25499" height="0.03261">
      <b>Titulaire de l’Autorisation de mise sur le marché</b> XXXXXXXX</p>
    <p page="5" left="0.11909" top="0.62748" width="0.10674" height="0.03261">
      <b>Fabricant</b> XXXXXXXX</p>
    <p page="5" left="0.11909" top="0.67255" width="0.69782" height="0.03261">Pour toute information complémentaire concernant ce médicament, veuillez prendre contact avec le représentant local du titulaire de l’autorisation de mise sur le marché :</p>
    <p page="5" left="0.11909" top="0.71762" width="0.20121" height="0.04763">
      <b>België/Belgique/Belgien Luxembourg/Luxemburg</b> XXXXXXXX</p>
    <p page="5" left="0.11909" top="0.77771" width="0.48802" height="0.01807">
      <b>La dernière date à laquelle cette notice a été révisée est 05/2021.</b>
    </p>
    <p page="5" left="0.11909" top="0.80775" width="0.71726" height="0.04763">
      <b>Autres sources d’informations</b> Des informations détaillées sur ce médicament sont disponibles sur le site internet de l’Agence européenne des médicaments http://www.ema.europa.eu.</p>
  </section>
</root>